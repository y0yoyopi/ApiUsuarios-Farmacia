org: aaronrojas #cambiar por tu org
service: api-usuarios

provider:
  name: aws
  runtime: python3.13
  memorySize: 1024
  timeout: 30
  stage: dev
  iam:
    role: arn:aws:iam::429960844715:role/LabRole # PONER EL ID
  environment:
    USERS_TABLE: t_usuarios-${sls:stage}
    TOKENS_TABLE: t_tokens_acceso-${sls:stage}

functions:
  CrearUsuario:
    handler: CrearUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/crear
          method: post
          cors: true
          integration: lambda

  LoginUsuario:
    handler: LoginUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/login
          method: post
          cors: true
          integration: lambda

resources:
  Resources:
    UsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: t_usuarios-${sls:stage}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    TokensAccesoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: t_tokens_acceso-${sls:stage}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
